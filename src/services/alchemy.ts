import { AlchemyWeb3, createAlchemyWeb3 } from "@alch/alchemy-web3";
import { AbiItem } from "web3-utils";
import { Logger } from "tslog";
import abi from "./erc721abi.json";
import dotenv from "dotenv";
import { CustomClient } from "../types";
import axios, { AxiosRequestConfig } from "axios";
import { client } from "../index";
dotenv.config();

const { ALCHEMY_API_KEY, DISCORD_WEBHOOK_URL } = process.env;

const log: Logger = new Logger();

type TransferEvent = {
    address: string;
    blockNumber: number;
    transactionHash: string;
    blockHash: string;
    removed: boolean;
    id: string;
    returnValues: {
        from: string;
        to: string;
        tokenId: string;
    };
    event: string;
    signature: string;
};

// type Transaction = {
//   blockHash: string;
//   blockNumber: number;
//   // Buyer of NFT
//   from: string;
//   // Gas limit
//   gas: number;
//   // Gas price in gwei
//   gasPrice: number;
//   maxFeePerGas: number;
//   maxPriorityFeePerGas: number;
//   hash: string;
//   // input: '0xab834bab0000000000000000000000007f268357a8c2552623316e2562d90e642bb538e5000000000000000000000000439393fb55623fabb87f0b2ece5656d63d2a3e2e000000000000000000000000a55e8f346a2e48045f0418aae297aae166f614ce0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000baf2127b49fc93cbca6269fade0f7f31df4c88a7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f268357a8c2552623316e2562d90e642bb538e5000000000000000000000000a55e8f346a2e48045f0418aae297aae166f614ce00000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c01073000000000000000000000000baf2127b49fc93cbca6269fade0f7f31df4c88a70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002ee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000083019dfc17b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006240858d00000000000000000000000000000000000000000000000000000000000000009087d46039698fb12b67ba35cf0f704d4b0388041aabb719fd815e2fbab30d7600000000000000000000000000000000000000000000000000000000000002ee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000083019dfc17b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000624082dd000000000000000000000000000000000000000000000000000000006249bdb041dac2602e005d38aa88b7355680a606604ae9f8695ae1c88dd4ba700ba000000000000000000000000000000000000000000000000000000000000007c000000000000000000000000000000000000000000000000000000000000008e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000b20000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000001c97f4c1c3776a1692b60d42eb10564c6c4c58cc0a617612c98df558799b5ccd046b2546b1a8024319bca74586d528e38e4c6a22c3144db305e47638ea214065ab97f4c1c3776a1692b60d42eb10564c6c4c58cc0a617612c98df558799b5ccd046b2546b1a8024319bca74586d528e38e4c6a22c3144db305e47638ea214065ab000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a5950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000439393fb55623fabb87f0b2ece5656d63d2a3e2e0000000000000000000000005af0d9827e0c53e4799bb226655a1de152a425a50000000000000000000000000000000000000000000000000000000000001277000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a595000000000000000000000000a55e8f346a2e48045f0418aae297aae166f614ce00000000000000000000000000000000000000000000000000000000000000000000000000000000000000005af0d9827e0c53e4799bb226655a1de152a425a50000000000000000000000000000000000000000000000000000000000001277000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe4000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
//   nonce: 130;
//   // OS Exchange
//   to: "0x7f268357A8c2552623316e2562D90e642bB538E5";
//   transactionIndex: 300;
//   // Transacted amount in gwei
//   value: string;
//   type: 2;
//   accessList: [];
//   chainId: "0x1";
//   v: "0x0";
//   r: "0x6a88e2c3989d828b7cfc45ebe61395864c4ef8a6850f6e902ae79325c8e95db";
//   s: "0x1a666c02eadcbee69c9ae06df2e6bda66fb30eb586820aef1a9f02b81af2c1bd";
// };

export class Alchemy {
    client: CustomClient = client;

    web3: AlchemyWeb3 = createAlchemyWeb3(`wss://eth-mainnet.ws.alchemyapi.io/ws/${ALCHEMY_API_KEY}`, {
        retryInterval: 1000,
        maxRetries: 25,
    });

    // Milady token address
    contractAddress = "0x5af0d9827e0c53e4799bb226655a1de152a425a5";
    contract = new this.web3.eth.Contract(abi as AbiItem[], this.contractAddress);

    transferCallback = async (event: TransferEvent) => {
        log.info("Event: ", event);
        log.info("Getting transaction");
        const tx = await this.web3.eth.getTransaction(event.transactionHash);
        log.info("Transaction: ", tx);
        const data = JSON.stringify({
            embeds: [
                {
                    title: "Transfer",
                    description: `${event.returnValues.from} transferred ${event.returnValues.tokenId} to ${
                        event.returnValues.to
                    } **[${Number(tx.value) / 1e18} ETH]**`,
                    color: 16757575,
                },
            ],
        });
        const config: AxiosRequestConfig = {
            method: "POST",
            url: DISCORD_WEBHOOK_URL,
            headers: { "Content-Type": "application/json" },
            data: data,
        };

        await axios(config);
        // .then(response => {
        //   console.log("Webhook delivered successfully");
        // });
        // await axios.post(
        //   `${DISCORD_WEBHOOK_URL}`,
        //   {
        //     //DISCORD_WEBHOOK_URL as string, {

        //     method: "POST",
        //     headers: {
        //       "Content-Type": "application/json",
        //     },
        //     data: data,
        //   }
        // );
        log.info("Getting transaction receipt");
        /*
    {
  blockHash: '0x57e8beffdcdd0251badeb41088a8c2456da7258a73146890a5767202b56f5356',
  blockNumber: 14469151,
  contractAddress: null,
  cumulativeGasUsed: 24252849,
  effectiveGasPrice: 32745666091,
  from: '0x439393fb55623fabb87f0b2ece5656d63d2a3e2e',
  gasUsed: 254625,
  logs: [
    {
      address: '0x5Af0D9827E0c53E4799BB226655A1de152A425a5',
      topics: [
        '0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925',
        '0x000000000000000000000000a55e8f346a2e48045f0418aae297aae166f614ce',
        '0x0000000000000000000000000000000000000000000000000000000000000000',
        '0x0000000000000000000000000000000000000000000000000000000000001277'
      ],
      data: '0x',
      blockNumber: 14469151,
      transactionHash: '0x146709a635cc751772e692fe282978d3ae018c702f203ebc5b457af362eac550',
      transactionIndex: 300,
      blockHash: '0x57e8beffdcdd0251badeb41088a8c2456da7258a73146890a5767202b56f5356',
      logIndex: 412,
      removed: false,
      id: 'log_d3d90073'
    },
    {
      address: '0x5Af0D9827E0c53E4799BB226655A1de152A425a5',
      topics: [
        '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
        '0x000000000000000000000000a55e8f346a2e48045f0418aae297aae166f614ce',
        '0x000000000000000000000000439393fb55623fabb87f0b2ece5656d63d2a3e2e',
        '0x0000000000000000000000000000000000000000000000000000000000001277'
      ],
      data: '0x',
      blockNumber: 14469151,
      transactionHash: '0x146709a635cc751772e692fe282978d3ae018c702f203ebc5b457af362eac550',
      transactionIndex: 300,
      blockHash: '0x57e8beffdcdd0251badeb41088a8c2456da7258a73146890a5767202b56f5356',
      logIndex: 413,
      removed: false,
      id: 'log_2112bdd1'
    },
    {
      address: '0x7f268357A8c2552623316e2562D90e642bB538E5',
      topics: [
        '0xc4109843e0b7d514e4c093114b863f8e7d8d9a458c372cd51bfe526b588006c9',
        '0x000000000000000000000000a55e8f346a2e48045f0418aae297aae166f614ce',
        '0x000000000000000000000000439393fb55623fabb87f0b2ece5656d63d2a3e2e',
        '0x0000000000000000000000000000000000000000000000000000000000000000'
      ],
      data: '0x0000000000000000000000000000000000000000000000000000000000000000e0b69cea058e70d50ac8400bce772cd5deeaf7c8d609f0a1e2d674ef93fe2fc1000000000000000000000000000000000000000000000000083019dfc17b0000',
      blockNumber: 14469151,
      transactionHash: '0x146709a635cc751772e692fe282978d3ae018c702f203ebc5b457af362eac550',
      transactionIndex: 300,
      blockHash: '0x57e8beffdcdd0251badeb41088a8c2456da7258a73146890a5767202b56f5356',
      logIndex: 414,
      removed: false,
      id: 'log_a5fdd1d0'
    }
  ],
  logsBloom: '0x
  status: true,
  to: '0x7f268357a8c2552623316e2562d90e642bb538e5',
  transactionHash: '0x146709a635cc751772e692fe282978d3ae018c702f203ebc5b457af362eac550',
  transactionIndex: 300,
  type: '0x2'
}
    */
        const txReceipt = await this.web3.eth.getTransactionReceipt(event.transactionHash);
        log.info("Transaction receipt: ", txReceipt);
    };

    init = async () => {
        // await this.transferCallback(this.event);
        log.info("Adding contract event listener");
        this.contract.events.Transfer(async (err: any, event: TransferEvent) => {
            if (err) {
                console.error(err);
                return;
            }

            await this.transferCallback(event);
        });
    };
}
